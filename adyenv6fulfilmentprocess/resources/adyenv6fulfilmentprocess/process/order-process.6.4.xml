<?xml version="1.0" encoding="utf-8"?>
<!--
  ~                        ######
  ~                        ######
  ~  ############    ####( ######  #####. ######  ############   ############
  ~  #############  #####( ######  #####. ######  #############  #############
  ~         ######  #####( ######  #####. ######  #####  ######  #####  ######
  ~  ###### ######  #####( ######  #####. ######  #####  #####   #####  ######
  ~  ###### ######  #####( ######  #####. ######  #####          #####  ######
  ~  #############  #############  #############  #############  #####  ######
  ~   ############   ############  #############   ############  #####  ######
  ~                                       ######
  ~                                #############
  ~                                ############
  ~
  ~  Adyen Hybris Extension
  ~
  ~  Copyright (c) 2017 Adyen B.V.
  ~  This file is open source and available under the MIT license.
  ~  See the LICENSE file for more info.
  -->

<process xmlns="http://www.hybris.de/xsd/processdefinition" start="checkOrder" name="order-process" processClass="de.hybris.platform.orderprocessing.model.OrderProcessModel">

	<action id="checkOrder" bean="checkOrderAction">
		<transition name="OK" to="adyenCheckAuthorization"/>
		<transition name="NOK" to="error"/>
	</action>

	<!-- Wait for HPP/3Ds authorization -->
	<action id="adyenCheckAuthorization" bean="adyenCheckAuthorizationAction">
		<transition name="OK" to="checkAuthorizeOrderPayment"/>
		<transition name="NOK" to="error"/>
		<transition name="WAIT" to="waitForAdyenAuthorization"/>
	</action>

	<!--Check authorization completion-->
	<wait id="waitForAdyenAuthorization" then="adyenCheckAuthorization" prependProcessCode="true">
		<event>AdyenAuthorized</event>
	</wait>

	<action id="checkAuthorizeOrderPayment" bean="checkAuthorizeOrderPaymentAction">
		<transition name="OK" to="reserveAmount"/>
		<transition name="NOK" to="authorizationFailedNotification"/>
	</action>

	<action id="reserveAmount" bean="reserveOrderAmountAction">
		<transition name="OK" to="checkTransactionReviewStatus"/>
		<transition name="NOK" to="sendPaymentFailedNotification"/>
	</action>

	<action id="checkTransactionReviewStatus" bean="checkTransactionReviewStatusAction">
		<transition name="OK" to="fraudCheck"/>
		<transition name="NOK" to="notifyCustomer"/>
		<transition name="WAIT" to="waitForReviewDecision"/>
	</action>

	<wait id="waitForReviewDecision" then="checkTransactionReviewStatus" prependProcessCode="false">
  		<event>${process.order.code}_ReviewDecision</event>
	</wait>

	<action id="fraudCheck" bean="fraudCheckOrderInternalAction">
		<transition name="OK" to="sendOrderPlacedNotification"/>
		<transition name="POTENTIAL" to="manualOrderCheckCSA" />
		<transition name="FRAUD" to="notifyCustomer" />
	</action>
	
	<action id="manualOrderCheckCSA" bean="prepareOrderForManualCheckAction">
		<transition name="OK" to="waitForManualOrderCheckCSA"/>
	</action>

	<wait id="waitForManualOrderCheckCSA" then="orderManualChecked" prependProcessCode="false" >
		<event>${process.code}_CSAOrderVerified</event>
	</wait>
	
	<action id="orderManualChecked" bean="orderManualCheckedAction">
		<transition name="OK" to="sendOrderPlacedNotification"/>
		<transition name="NOK" to="waitForCleanUp"/>
		<transition name="UNDEFINED" to="waitForManualOrderCheckCSA"/>
	</action>
	
	<action id="notifyCustomer" bean="notifyCustomerAboutFraudAction">
		<transition name="OK" to="waitForCleanUp"/>
	</action>
	
	<wait id="waitForCleanUp" then="scheduleForCleanUp" prependProcessCode="false">
		<event>${process.code}_CleanUpEvent</event>
	</wait>
	
	<action id="scheduleForCleanUp" bean="scheduleForCleanUpAction">
		<transition name="OK" to="cancelOrder"/>
		<transition name="NOK" to="orderManualChecked" /> 
	</action>

	<action id="sendOrderPlacedNotification" bean="sendOrderPlacedNotificationAction">
		<transition name="OK" to="takePayment"/>
	</action>
	
	<action id="takePayment" bean="adyenTakePaymentAction">
		<transition name="OK" to="adyenCheckCapture"/>
		<transition name="NOK" to="sendPaymentFailedNotification"/>
	</action>

	<!--Check if the payment is already captured-->
	<action id="adyenCheckCapture" bean="adyenCheckCaptureAction">
		<transition name="OK" to="splitOrder"/>
		<transition name="NOK" to="sendPaymentFailedNotification"/>
		<transition name="WAIT" to="waitForAdyenCapture"/>
	</action>

	<!--Check Capture completion-->
	<wait id="waitForAdyenCapture" then="adyenCheckCapture" prependProcessCode="false">
		<event>${process.code}_AdyenCaptured</event>
	</wait>

	<action id="cancelOrder" bean="cancelWholeOrderAuthorizationAction">
		<transition name="OK" to="adyenCancelOrRefund"/>
	</action>

	<!--Cancel Adyen transactions first-->
	<action id="adyenCancelOrRefund" bean="adyenCancelOrRefundAction">
		<transition name="OK" to="failed"/>
	</action>

	<action id="authorizationFailedNotification" bean="sendAuthorizationFailedNotificationAction">
		<transition name="OK" to="failed"/>
	</action>

	<action id="sendPaymentFailedNotification" bean="sendPaymentFailedNotificationAction">
		<transition name="OK" to="failed"/>
	</action>

	<action id="splitOrder" bean="splitOrderAction">
		<transition name="OK" to="waitForWarehouseSubprocessEnd"/>
	</action>

	<wait id="waitForWarehouseSubprocessEnd" then="isProcessCompleted" prependProcessCode="false" >
		<event>${process.code}_ConsignmentSubprocessEnd</event>
	</wait>

	<action id="isProcessCompleted" bean="subprocessesCompletedAction">
		<transition name="OK" to="sendOrderCompletedNotification"/>
		<transition name="NOK" to="waitForWarehouseSubprocessEnd"/>
	</action>

	<action id="sendOrderCompletedNotification" bean="sendOrderCompletedNotificationAction">
		<transition name="OK" to="success"/>
	</action>

	<end id="error" state="ERROR">All went wrong.</end>
	<end id="failed" state="FAILED">Order not placed.</end>
	<end id="success" state="SUCCEEDED">Order placed.</end>

</process>